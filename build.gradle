plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.31'
    id "com.google.protobuf" version "0.8.15"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def grpcVersion = "1.36.0"
def grpcKotlinVersion = "1.0.0"
def protobufVersion = "3.13.0"
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.31"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.4.3"

    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"

    implementation 'io.grpc:grpc-netty-shaded:1.36.0'
    implementation 'io.grpc:grpc-protobuf:1.36.0'
    implementation 'io.grpc:grpc-stub:1.36.0'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'

    implementation "io.grpc:grpc-kotlin-stub:${grpcKotlinVersion}"
    implementation "io.netty:netty-all:4.1.60.Final"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    main {
        java {
            srcDir("src/main/java")
            srcDir("src/main/kotlin")
            srcDir("build/generated/source/proto/main/grpc")
            srcDir("build/generated/source/proto/main/grpckt")
            srcDir("build/generated/source/proto/main/java")
        }
    }

    test {
        java {
            srcDir("src/main/java")
            srcDir("src/main/kotlin")
            srcDir("build/generated/source/proto/main/grpc")
            srcDir("build/generated/source/proto/main/grpckt")
            srcDir("build/generated/source/proto/main/java")
        }
    }
}


protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protobufVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
        grpckt { artifact = "io.grpc:protoc-gen-grpc-kotlin::1.0.0:jdk7@jar" }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
            grpckt {}
        }
    }
}